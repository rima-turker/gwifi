plugins {
    id 'org.hidetake.ssh' version '2.8.0'
}

gradle.projectsEvaluated {
   compileJava.dependsOn(copyConfiguration)
}

def environment = hasProperty('env') ? env : 'dev'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'

applicationDefaultJvmArgs = ["-Xmx50g", "-d64", "-XX:+UseParallelGC", "-server"]

//group = 'edu.kit.aifb.annotation'
//version = '1.0'

description = """Graph-based Wikifier"""

//mainClassName="edu.kit.aifb.gwifi.demo.ArticleDemo"
//mainClassName="org.fiz.ise.gwifi.dataset.DatasetGenerationLINE_EntityEntity2"
mainClassName="org.fiz.ise.gwifi.dataset.LINE.CategoryBased.DatasetGeneration_EntityCategory_CatFiltered"

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    jcenter()
}

dependencies {
	compile fileTree(dir: 'lib', include: ['*.jar'])
compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	
	//compile group: 'it.unimi.dsi', name: 'fastutil', version: '8.1.1'	
	compile group: 'org.ejml', name: 'ejml-all', version: '0.33'


    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version:'4.6'
    compile group: 'net.sf.trove4j', name: 'trove4j', version:'3.0.3'
    compile group: 'net.sf.jung', name: 'jung-graph-impl', version:'2.0.1'
    compile group: 'net.sf.jung', name: 'jung-api', version:'2.0.1'
    compile group: 'net.sf.jung', name: 'jung-algorithms', version:'2.0.1'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'com.sleepycat', name: 'je', version:'4.0.92'
    compile group: 'com.facebook.hadoop', name: 'hadoop-core', version:'0.20.0'
    compile group: 'org.apache.directory.studio', name: 'org.apache.commons.io', version:'2.4'
    compile group: 'org.apache.opennlp', name: 'opennlp-tools', version:'1.5.3'
    compile group: 'org.apache.opennlp', name: 'opennlp-maxent', version:'3.0.3'
    compile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
    compile group: 'org.apache.directory.studio', name: 'org.apache.commons.lang', version:'2.6'
    compile group: 'org.apache.lucene', name: 'lucene-core', version:'4.8.0'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version:'4.8.0'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version:'4.8.0'
    compile group: 'org.eclipse.birt.runtime.3_7_1', name: 'org.apache.xerces', version:'2.9.0'
    compile group: 'commons-cli', name: 'commons-cli', version:'1.1'
    compile group: 'org.springframework', name: 'spring-context', version:'3.0.3.RELEASE'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'3.3.1'
    compile group: 'org.apache.ant', name: 'ant', version:'1.8.2'
    compile group: 'info.bliki.wiki', name: 'bliki-core', version:'3.0.19'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version:'2.12.2'
    compile group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version:'3.6.6'
    compile group: 'org.jsoup', name: 'jsoup', version:'1.8.1'
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.3.1'
    compile group: 'com.hankcs', name: 'hanlp', version:'portable-1.2.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.0'
    
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
}


ssh.settings {
    dryRun = project.hasProperty('dryRun')
}

remotes {
    server {
        host = '10.10.4.10'
        user = 'rima'
        identity = file("${System.properties['user.home']}/.ssh/id_rsa")
    }
}

jar {    
   exclude('config.properties')   
}

applicationDistribution.from("src/main/resources/config.properties") {
   into "bin"
}

startScripts {
   classpath += files('bin')
   doLast {
       def windowsScriptFile = file getWindowsScript()
       def unixScriptFile    = file getUnixScript()
       windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\bin', '%APP_HOME%\\bin')
       unixScriptFile.text    = unixScriptFile.text.replace('$APP_HOME/lib/bin', '$APP_HOME/bin')
   }
}

task copyConfiguration {
    doLast {
    println "Target environment: $environment"
    copy {
        from "src/main/environment/$environment"
        into "src/main/resources"
        include "**/*"
    }
    }
}

task deployZip(dependsOn: distTar) {
    doLast {
    	ssh.run {
	        session(remotes.server) {        
	         	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi' 
	         	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi.tar'         	
	            put from: './build/distributions/gwifi.tar', into: '/home/rima/playground/JavaProjectsRun/'	            	           
	            execute 'cd /home/rima/playground//JavaProjectsRun/ && tar -xvf gwifi.tar'            
	            execute 'cd /home/rima/playground/JavaProjectsRun/ && chmod +x gwifi/bin/gwifi'
	        	execute 'cp -r /home/rima/playground/GeneralFiles/gwifi/configs /home/rima/playground/JavaProjectsRun/gwifi/bin/.'
	        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi.tar'  
	        }
    	}
    }
task deployOnlyJar(dependsOn: installDist)  {
    doLast {
    ssh.run {
        session(remotes.server) {         	
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/lib/gwifi.jar'
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/log'
            put from: './build/install/gwifi/lib/gwifi.jar', into: '/home/rima/playground/JavaProjectsRun/gwifi/lib'
        
        }
    }
    }
}

task deployOnlyExe(dependsOn: installDist) {
    doLast {
    ssh.run {
        session(remotes.server) {         	
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/gwifi'
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/log'
            put from: './build/install/gwifi/bin/gwifi', into: '/home/rima/playground/JavaProjectsRun/gwifi/bin'
            execute 'chmod +x /home/rima/playground/JavaProjectsRun/gwifi/bin/gwifi'
        }
    }
    }
}

task deployOnlyConfig()  {
doLast {
    ssh.run {
        session(remotes.server) {         	
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/config.properties'
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/log'
            put from: '/home/rtue/eclipse-workspace/gwifi/src/main/environment/prod/config.properties', into: '/home/rima/playground/JavaProjectsRun/gwifi/bin'            
        }
    }
    }
}
task deployOnlyConfigsFolder() {
    doLast {
    ssh.run {
        session(remotes.server) {         	
 	execute 'cp -r /home/rima/playground/GeneralFiles/gwifi/configs /home/rima/playground/JavaProjectsRun/gwifi/bin/.'
        }
    }
    }
}

task deployAllButLibs(dependsOn: installDist)  {
doLast {
    ssh.run {
        session(remotes.server) {         	
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/log'
        	
        	execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/lib/gwifi.jar'
            put from: './build/install/gwifi/lib/gwifi.jar', into: '/home/rima/playground/JavaProjectsRun/gwifi/lib'
            execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/CrossLingualEntityLinking'
            put from: './build/install/gwifi/bin/gwifi', into: '/home/rima/playground/JavaProjectsRun/gwifi/bin'
            execute 'chmod +x /home/rima/playground/JavaProjectsRun/gwifi/bin/gwifi'
            execute 'rm -rf /home/rima/playground/JavaProjectsRun/gwifi/bin/config.properties'
            put from: '/home/rtue/eclipse-workspace/CrossLingualEntityLinking/src/main/resources/config.properties', into: '/home/rima/playground/JavaProjectsRun/gwifi/bin'            
        }
    }
    }
}
}
